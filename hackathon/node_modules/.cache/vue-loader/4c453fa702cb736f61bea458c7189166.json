{"remainingRequest":"/Users/timothyqin/ONE/hackathon/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/timothyqin/ONE/hackathon/src/components/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/timothyqin/ONE/hackathon/src/components/Login.vue","mtime":1564354418446},{"path":"/Users/timothyqin/ONE/hackathon/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/timothyqin/ONE/hackathon/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/timothyqin/ONE/hackathon/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/timothyqin/ONE/hackathon/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {httpGetOptions} from \"../lib/http\";\nimport MD5 from \"crypto-js/md5\";\nexport default {\n    name: 'login',\n    data() {\n        return {\n            LoginModel: {\n                username: '',\n                password: ''\n            }\n        }\n    },\n    mounted() {\n        this.resetCurrentUser(\"\")\n    },\n    computed: {\n        getCurrentUser() {\n            return this.$store.state.profile.username;\n        }\n    },\n    methods: {\n        login() {\n            var username = this.LoginModel.username;\n            var password = MD5(this.LoginModel.password).toString();\n            fetch(\"http://127.0.0.1:8080/users/login/\" + username + \"/\" + password, httpGetOptions())\n                .then(res => res.json())\n                .then(response => {\n                    if(!response)\n                        alert(\"Wrong username or password!\");\n                    else {\n                        this.resetCurrentUser(username.trim());\n                        this.$router.push({path: '/dashboard'})\n                    }\n                })\n                .catch(error => console.error('Error:', error));\n        },\n        signup() {\n            this.$router.push({path: '/signup'});\n        },\n        resetCurrentUser(username) {\n            this.$store.dispatch('setCurrentUserAction', username);\n            this.$store.dispatch('clearCurrentStoredTransactionsAction');\n        }\n    }\n};\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"container-1\">\n        <main>\n            <div id=\"container-2\">\n            <h2>Login</h2>\n            <div id=\"grid\">\n                <i class=\"fa fa-user\" aria-hidden=\"true\"></i>\n                <input type=\"text\" class=\"form-control margin-bottom\" placeholder=\"Username\" v-model=LoginModel.username>\n                <i class=\"fa fa-lock\" aria-hidden=\"true\"></i>\n                <input type=\"password\" class=\"form-control margin-bottom\" placeholder=\"Password\" @keyup.enter=\"login()\" v-model=LoginModel.password>\n            </div>\n            <button id=\"loginButton\" class=\"btn btn-md btn-success float-center\" @click=\"login()\">\n                Submit\n            </button>\n            <button id=\"signupButton\" class=\"btn btn-md btn-primary float-center\" @click=\"signup()\">\n                SignUp\n            </button>\n            </div>\n        </main>\n    </div>\n</template>\n\n<script>\n    import {httpGetOptions} from \"../lib/http\";\n    import MD5 from \"crypto-js/md5\";\n    export default {\n        name: 'login',\n        data() {\n            return {\n                LoginModel: {\n                    username: '',\n                    password: ''\n                }\n            }\n        },\n        mounted() {\n            this.resetCurrentUser(\"\")\n        },\n        computed: {\n            getCurrentUser() {\n                return this.$store.state.profile.username;\n            }\n        },\n        methods: {\n            login() {\n                var username = this.LoginModel.username;\n                var password = MD5(this.LoginModel.password).toString();\n                fetch(\"http://127.0.0.1:8080/users/login/\" + username + \"/\" + password, httpGetOptions())\n                    .then(res => res.json())\n                    .then(response => {\n                        if(!response)\n                            alert(\"Wrong username or password!\");\n                        else {\n                            this.resetCurrentUser(username.trim());\n                            this.$router.push({path: '/dashboard'})\n                        }\n                    })\n                    .catch(error => console.error('Error:', error));\n            },\n            signup() {\n                this.$router.push({path: '/signup'});\n            },\n            resetCurrentUser(username) {\n                this.$store.dispatch('setCurrentUserAction', username);\n                this.$store.dispatch('clearCurrentStoredTransactionsAction');\n            }\n        }\n    };\n</script>\n\n<style scoped>\n    main {\n        background-color: #F7F7FC;\n        display: grid;\n        height: 100vh;\n        align-content: center;\n        align-items: center;\n        padding: 0 15%;\n    }\n    h2 {\n        font-size: 2em;\n        margin-top: 0;\n        margin-bottom: 1em;\n    }\n    #grid {\n        display: grid;\n        grid-template-columns: 3em auto;\n        grid-template-rows: repeat(2, 3em);\n        grid-column-gap: 1em;\n    }\n    i {\n        font-size: 2em;\n        text-align: center;\n    }\n    #signupButton {\n        margin-left: 1%;\n    }\n    .container-1 {\n        display: grid;\n        align-items: center;\n        align-content: center;\n    }\n    #container-2 {\n        background-color: white;\n        padding: 4em;\n        border-radius: 2em;\n          box-shadow: -5px 29px 162px -54px grey;\n\n    }\n    @media only screen and (max-width: 1100px) {\n  main{\n    height: 85vh;\n    border-radius: 1em;\n    margin: 0 5vw;\n    background-color: transparent;\n  }\n}\n</style>\n"]}]}