{"remainingRequest":"/Users/timothyqin/ONE/hackathon/node_modules/babel-loader/lib/index.js!/Users/timothyqin/ONE/hackathon/node_modules/eslint-loader/index.js??ref--13-0!/Users/timothyqin/ONE/hackathon/src/store/store.js","dependencies":[{"path":"/Users/timothyqin/ONE/hackathon/src/store/store.js","mtime":1559757720343},{"path":"/Users/timothyqin/ONE/hackathon/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/timothyqin/ONE/hackathon/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/timothyqin/ONE/hackathon/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport { isEquivalent } from \"../lib/lib\";\nVue.use(Vuex);\nvar state = {\n  username: '',\n  transactions: []\n};\nvar getters = {\n  getCurrentUser: function getCurrentUser(state) {\n    return state.username;\n  }\n};\nvar mutations = {\n  setCurrentUserMutations: function setCurrentUserMutations(state, nextUsername) {\n    state.username = nextUsername;\n  },\n  clearCurrentStoredTransactionsMutation: function clearCurrentStoredTransactionsMutation(state) {\n    state.transactions = [];\n  },\n  addTransactionMutation: function addTransactionMutation(state, transaction) {\n    state.transactions.push(transaction);\n  },\n  removeTransactionMutation: function removeTransactionMutation(state, transaction) {\n    var index = 0;\n\n    while (!isEquivalent(state.transactions[index], transaction)) {\n      index++;\n    }\n\n    state.transactions.splice(index, 1);\n  }\n};\nvar actions = {\n  setCurrentUserAction: function setCurrentUserAction(context, username) {\n    context.commit('setCurrentUserMutations', username);\n  },\n  clearCurrentStoredTransactionsAction: function clearCurrentStoredTransactionsAction(context) {\n    context.commit(\"clearCurrentStoredTransactionsMutation\");\n  },\n  addTransactionAction: function addTransactionAction(context, transaction) {\n    context.commit('addTransactionMutation', transaction);\n  },\n  removeTransactionAction: function removeTransactionAction(context, transaction) {\n    context.commit('removeTransactionMutation', transaction);\n  }\n};\nexport default new Vuex.Store({\n  strict: true,\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n});",{"version":3,"sources":["/Users/timothyqin/ONE/hackathon/src/store/store.js"],"names":["Vue","Vuex","isEquivalent","use","state","username","transactions","getters","getCurrentUser","mutations","setCurrentUserMutations","nextUsername","clearCurrentStoredTransactionsMutation","addTransactionMutation","transaction","push","removeTransactionMutation","index","splice","actions","setCurrentUserAction","context","commit","clearCurrentStoredTransactionsAction","addTransactionAction","removeTransactionAction","Store","strict"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEAF,GAAG,CAACG,GAAJ,CAAQF,IAAR;AAEA,IAAMG,KAAK,GAAG;AACVC,EAAAA,QAAQ,EAAE,EADA;AAEVC,EAAAA,YAAY,EAAE;AAFJ,CAAd;AAKA,IAAMC,OAAO,GAAG;AACZC,EAAAA,cAAc,EAAE,wBAASJ,KAAT,EAAgB;AAC5B,WAAOA,KAAK,CAACC,QAAb;AACH;AAHW,CAAhB;AAMA,IAAMI,SAAS,GAAG;AACdC,EAAAA,uBAAuB,EAAE,iCAASN,KAAT,EAAgBO,YAAhB,EAA8B;AACnDP,IAAAA,KAAK,CAACC,QAAN,GAAiBM,YAAjB;AACH,GAHa;AAIdC,EAAAA,sCAAsC,EAAE,gDAASR,KAAT,EAAgB;AACpDA,IAAAA,KAAK,CAACE,YAAN,GAAqB,EAArB;AACH,GANa;AAOdO,EAAAA,sBAAsB,EAAE,gCAAST,KAAT,EAAgBU,WAAhB,EAA6B;AACjDV,IAAAA,KAAK,CAACE,YAAN,CAAmBS,IAAnB,CAAwBD,WAAxB;AACH,GATa;AAUdE,EAAAA,yBAAyB,EAAE,mCAASZ,KAAT,EAAgBU,WAAhB,EAA6B;AACpD,QAAIG,KAAK,GAAG,CAAZ;;AACA,WAAM,CAACf,YAAY,CAACE,KAAK,CAACE,YAAN,CAAmBW,KAAnB,CAAD,EAA4BH,WAA5B,CAAnB;AAA6DG,MAAAA,KAAK;AAAlE;;AACAb,IAAAA,KAAK,CAACE,YAAN,CAAmBY,MAAnB,CAA0BD,KAA1B,EAAiC,CAAjC;AACH;AAda,CAAlB;AAiBA,IAAME,OAAO,GAAG;AACZC,EAAAA,oBAAoB,EAAE,8BAASC,OAAT,EAAkBhB,QAAlB,EAA4B;AAC9CgB,IAAAA,OAAO,CAACC,MAAR,CAAe,yBAAf,EAA0CjB,QAA1C;AACH,GAHW;AAIZkB,EAAAA,oCAAoC,EAAE,8CAASF,OAAT,EAAkB;AACpDA,IAAAA,OAAO,CAACC,MAAR,CAAe,wCAAf;AACH,GANW;AAOZE,EAAAA,oBAAoB,EAAE,8BAASH,OAAT,EAAkBP,WAAlB,EAA+B;AACjDO,IAAAA,OAAO,CAACC,MAAR,CAAe,wBAAf,EAAyCR,WAAzC;AACH,GATW;AAUZW,EAAAA,uBAAuB,EAAE,iCAASJ,OAAT,EAAkBP,WAAlB,EAA+B;AACpDO,IAAAA,OAAO,CAACC,MAAR,CAAe,2BAAf,EAA4CR,WAA5C;AACH;AAZW,CAAhB;AAeA,eAAe,IAAIb,IAAI,CAACyB,KAAT,CAAe;AAC5BC,EAAAA,MAAM,EAAE,IADoB;AAE1BvB,EAAAA,KAAK,EAALA,KAF0B;AAG1BG,EAAAA,OAAO,EAAPA,OAH0B;AAI1BE,EAAAA,SAAS,EAATA,SAJ0B;AAK1BU,EAAAA,OAAO,EAAPA;AAL0B,CAAf,CAAf","sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport { isEquivalent } from \"../lib/lib\";\n\nVue.use(Vuex);\n\nconst state = {\n    username: '',\n    transactions: []\n}\n\nconst getters = {\n    getCurrentUser: function(state) {\n        return state.username;\n    }\n}\n\nconst mutations = {\n    setCurrentUserMutations: function(state, nextUsername) {\n        state.username = nextUsername;\n    },\n    clearCurrentStoredTransactionsMutation: function(state) {\n        state.transactions = []\n    },\n    addTransactionMutation: function(state, transaction) {\n        state.transactions.push(transaction);\n    },\n    removeTransactionMutation: function(state, transaction) {\n        var index = 0;\n        while(!isEquivalent(state.transactions[index], transaction)) index++;\n        state.transactions.splice(index, 1);\n    }\n}\n\nconst actions = {\n    setCurrentUserAction: function(context, username) {\n        context.commit('setCurrentUserMutations', username);\n    },\n    clearCurrentStoredTransactionsAction: function(context) {\n        context.commit(\"clearCurrentStoredTransactionsMutation\");\n    },\n    addTransactionAction: function(context, transaction) {\n        context.commit('addTransactionMutation', transaction);\n    },\n    removeTransactionAction: function(context, transaction) {\n        context.commit('removeTransactionMutation', transaction);\n    }\n}\n\nexport default new Vuex.Store({\n  strict: true,\n    state,\n    getters,\n    mutations,\n    actions\n});\n"]}]}