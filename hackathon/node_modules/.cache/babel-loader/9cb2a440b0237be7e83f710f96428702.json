{"remainingRequest":"/Users/timothyqin/ONE/hackathon/node_modules/babel-loader/lib/index.js!/Users/timothyqin/ONE/hackathon/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/timothyqin/ONE/hackathon/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/timothyqin/ONE/hackathon/src/components/LineChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/timothyqin/ONE/hackathon/src/components/LineChart.vue","mtime":1559341481468},{"path":"/Users/timothyqin/ONE/hackathon/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/timothyqin/ONE/hackathon/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/timothyqin/ONE/hackathon/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/timothyqin/ONE/hackathon/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _parseFloat from \"/Users/timothyqin/ONE/hackathon/node_modules/@babel/runtime-corejs2/core-js/parse-float\";\nimport \"core-js/modules/es6.regexp.to-string\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport LineChart from \"../LineChart.js\";\nimport { transactions } from \"../firebase\";\nexport default {\n  name: \"line\",\n  components: {\n    LineChart: LineChart\n  },\n  data: function data() {\n    return {\n      user: null,\n      chartOptions: {\n        scales: {\n          xAxes: [{\n            type: 'time',\n            distribution: 'linear',\n            time: {\n              unit: 'day',\n              min: this.getFirstDay(),\n              max: this.getLastDay()\n            }\n          }]\n        },\n        maintainAspectRatio: false\n      }\n    };\n  },\n  methods: {\n    getFirstDay: function getFirstDay() {\n      var date = new Date();\n      var firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n      return firstDay;\n    },\n    getLastDay: function getLastDay() {\n      var date = new Date();\n      var lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n      return lastDay;\n    },\n    reverseOrder: function reverseOrder(l) {\n      var reversed = [];\n\n      for (var i = l.length - 1; i >= 0; i--) {\n        reversed.push(l[i]);\n      }\n\n      return reversed;\n    }\n  },\n  firebase: {\n    list: transactions.orderByChild(\"date\")\n  },\n  mounted: function mounted() {\n    this.user = this.$store.state.username;\n  },\n  computed: {\n    datacollection: function datacollection() {\n      if (!this.user) {\n        return null;\n      } else {\n        return {\n          // labels: this.getDaysOfMonth,\n          datasets: [{\n            label: \"Earnings\",\n            data: this.earnings,\n            fill: false,\n            borderColor: \"#53f442\" // backgroundColor: \"#53f442\"\n\n          }, {\n            label: \"Spendings\",\n            data: this.spendings,\n            fill: false,\n            borderColor: \"#e82929\" // backgroundColor: \"#e82929\"\n\n          }, {\n            label: \"Balance\",\n            data: this.balance,\n            fill: false,\n            borderColor: \"#000000\" // backgroundColor: \"#e82929\"\n\n          }]\n        };\n      }\n    },\n    earnings: function earnings() {\n      var firstDay = this.getFirstDay();\n      var lastDay = this.getLastDay();\n      var sorted = this.list;\n      var earnings = [];\n\n      for (var i = 0; i < sorted.length; i++) {\n        if (sorted[i].username === this.user && new Date(sorted[i].date.toString()) >= firstDay && new Date(sorted[i].date.toString()) <= lastDay && sorted[i].amount > 0) {\n          earnings.push({\n            x: new Date(sorted[i].date),\n            y: sorted[i].amount\n          });\n        }\n      }\n\n      return earnings;\n    },\n    spendings: function spendings() {\n      var firstDay = this.getFirstDay();\n      var lastDay = this.getLastDay();\n      var sorted = this.list;\n      var spendings = [];\n\n      for (var i = 0; i < sorted.length; i++) {\n        if (sorted[i].username === this.user && new Date(sorted[i].date) >= firstDay && new Date(sorted[i].date) <= lastDay && sorted[i].amount < 0) {\n          spendings.push({\n            x: new Date(sorted[i].date),\n            y: Math.abs(sorted[i].amount)\n          });\n        }\n      }\n\n      return spendings;\n    },\n    balance: function balance() {\n      var firstDay = this.getFirstDay();\n      var lastDay = this.getLastDay();\n      var sorted = this.list;\n      var balance = [];\n      var sum = 0;\n\n      for (var i = 0; i < sorted.length; i++) {\n        if (sorted[i].username === this.user && new Date(sorted[i].date) >= firstDay && new Date(sorted[i].date) <= lastDay) {\n          sum += _parseFloat(sorted[i].amount);\n          balance.push({\n            x: new Date(sorted[i].date),\n            y: sum\n          });\n        }\n      }\n\n      return balance;\n    }\n  }\n};",{"version":3,"sources":["LineChart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"container-1\">\n    <main>\n      <div id=\"container-2\">\n        <h2>This Month</h2>\n        <div class=\"chart\">\n          <line-chart :width=\"400\" :height=\"350\" id=\"myChart\" :chart-data=\"datacollection\" :options=\"chartOptions\"></line-chart>\n        </div>\n      </div>\n    </main>\n  </div>\n</template>\n\n<script>\n    import LineChart from \"../LineChart.js\";\n    import { transactions } from \"../firebase\";\n\n    export default {\n        name: \"line\",\n        components: {\n            LineChart\n        },\n        data() {\n            return {\n                user: null,\n                chartOptions: {\n                    scales: {\n                        xAxes: [{\n                            type: 'time',\n                            distribution: 'linear',\n                            time: {\n                                unit: 'day',\n                                min: this.getFirstDay(),\n                                max: this.getLastDay()\n                            }\n                        }]\n                    },\n                    maintainAspectRatio:false\n                }\n            };\n        },\n        methods: {\n            getFirstDay() {\n                var date = new Date();\n                var firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n                return firstDay;\n            },\n            getLastDay() {\n                var date = new Date();\n                var lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n                return lastDay;\n            },\n            reverseOrder(l) {\n                var reversed = [];\n                for(var i = l.length - 1; i >= 0; i--) {\n                    reversed.push(l[i]);\n                }\n                return reversed;\n            }\n        },\n        firebase: {\n            list: transactions.orderByChild(\"date\")\n        },\n        mounted() {\n            this.user = this.$store.state.username;\n        },\n        computed: {\n            datacollection: function() {\n                if (!this.user) {\n                    return null;\n                } else {\n                    return {\n                        // labels: this.getDaysOfMonth,\n                        datasets: [\n                            {\n                                label: \"Earnings\",\n                                data: this.earnings,\n                                fill: false,\n                                borderColor: \"#53f442\"\n                                // backgroundColor: \"#53f442\"\n                            },\n                            {\n                                label: \"Spendings\",\n                                data: this.spendings,\n                                fill: false,\n                                borderColor: \"#e82929\"\n                                // backgroundColor: \"#e82929\"\n                            }\n                            ,\n                            {\n                                label: \"Balance\",\n                                data: this.balance,\n                                fill: false,\n                                borderColor: \"#000000\"\n                                // backgroundColor: \"#e82929\"\n                            }\n                        ]\n                    };\n                }\n            },\n            earnings: function() {\n                var firstDay = this.getFirstDay();\n                var lastDay = this.getLastDay();\n                var sorted = this.list;\n                var earnings = [];\n                for(var i = 0; i < sorted.length; i++) {\n                    if(sorted[i].username === this.user\n                        && new Date(sorted[i].date.toString()) >= firstDay && new Date(sorted[i].date.toString()) <= lastDay\n                        && sorted[i].amount > 0) {\n                        earnings.push({x: new Date(sorted[i].date), y: sorted[i].amount});\n                    }\n                }\n                return earnings;\n            },\n            spendings: function() {\n                var firstDay = this.getFirstDay();\n                var lastDay = this.getLastDay();\n                var sorted = this.list;\n                var spendings = [];\n                for(var i = 0; i < sorted.length; i++) {\n                    if(sorted[i].username === this.user\n                        && new Date(sorted[i].date) >= firstDay && new Date(sorted[i].date) <= lastDay\n                        && sorted[i].amount < 0) {\n                        spendings.push({x: new Date(sorted[i].date), y: Math.abs(sorted[i].amount)});\n                    }\n                }\n                return spendings;\n            },\n            balance: function() {\n                var firstDay = this.getFirstDay();\n                var lastDay = this.getLastDay();\n                var sorted = this.list;\n                var balance = [];\n                var sum = 0;\n                for(var i = 0; i < sorted.length; i++) {\n                    if(sorted[i].username === this.user\n                        && new Date(sorted[i].date) >= firstDay && new Date(sorted[i].date) <= lastDay) {\n                        sum += parseFloat(sorted[i].amount);\n                        balance.push({x: new Date(sorted[i].date), y: sum});\n                    }\n                }\n                return balance;\n            }\n        }\n    };\n</script>\n\n<style scoped>\n  main {\n    background-color: #f7f7fc;\n    display: grid;\n    height: 100vh;\n    align-content: center;\n    align-items: center;\n    padding: 0 15%;\n  }\n  h2 {\n    font-size: 2em;\n    margin-top: 0;\n    margin-bottom: 1em;\n  }\n  #signupButton {\n    margin-left: 1%;\n  }\n  .container-1 {\n    display: grid;\n    align-items: center;\n    align-content: center;\n  }\n  #container-2 {\n    background-color: white;\n    height: 85vh;\n    padding: 4em;\n    border-radius: 2em;\n    box-shadow: -5px 29px 162px -54px grey;\n  }\n  @media only screen and (max-width: 1100px) {\n    main {\n      height: 85vh;\n      border-radius: 1em;\n      padding: 0 5%;\n      margin: 0 5vw;\n      background-color: transparent;\n    }\n  }\n</style>"],"sourceRoot":"src/components"}]}