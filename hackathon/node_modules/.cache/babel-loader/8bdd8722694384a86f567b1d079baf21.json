{"remainingRequest":"/Users/timothyqin/ONE/hackathon/node_modules/babel-loader/lib/index.js!/Users/timothyqin/ONE/hackathon/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/timothyqin/ONE/hackathon/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/timothyqin/ONE/hackathon/src/components/EditEntry.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/timothyqin/ONE/hackathon/src/components/EditEntry.vue","mtime":1565010362554},{"path":"/Users/timothyqin/ONE/hackathon/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/timothyqin/ONE/hackathon/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/timothyqin/ONE/hackathon/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/timothyqin/ONE/hackathon/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { httpPostOptions } from \"../lib/http\";\nimport Dashboard from \"./Dashboard\";\nexport default {\n  name: \"edit\",\n  props: [\"transaction\"],\n  data: function data() {\n    return {\n      spent: null\n    };\n  },\n  computed: {\n    editModel: function editModel() {\n      return {\n        user_id: this.transaction.user_id,\n        toggle: this.transaction.amount > 0,\n        transaction_date: this.transaction.transaction_date,\n        category: this.transaction.category,\n        account: this.transaction.account,\n        payee: this.transaction.payee,\n        amount: Math.abs(this.transaction.amount),\n        memo: this.transaction.memo,\n        transaction_id: this.transaction.transaction_id\n      };\n    },\n    payerPayee: function payerPayee() {\n      if (this.editModel.toggle) return \"Payer\";\n      return \"Payee\";\n    }\n  },\n  methods: {\n    submit: function submit() {\n      var _this = this;\n\n      var curr = this.editModel;\n\n      if (curr.amount !== \"\" && curr.account !== \"\" && curr.transaction_date.toString().split(\"-\").length === 3) {\n        var factor = 1;\n        if (!curr.toggle) factor = -1;\n        var model = {\n          user_id: curr.user_id,\n          transaction_date: curr.transaction_date,\n          category: curr.category,\n          account: curr.account,\n          payee: curr.payee,\n          amount: Number(Math.abs(curr.amount)) * factor,\n          memo: curr.memo,\n          transaction_id: curr.transaction_id\n        };\n        fetch(\"http://127.0.0.1:8080/transactions/\" + this.$store.state.profile.user_id + \"/update\", httpPostOptions(model)).then(function (res) {\n          return res.json();\n        }).then(function (response) {\n          _this.$store.dispatch(\"editTransactionAction\", model);\n\n          alert(\"Transaction updated!\");\n        }).catch(function (error) {\n          return alert(\"Transaction failed to update.\");\n        });\n        this.close();\n      } else {\n        alert(\"Make sure you fill in amount, account, AND proper date!\");\n      }\n    },\n    close: function close() {\n      this.spent = null;\n      Dashboard.methods.closeEditEntry();\n    },\n    updateToggle: function updateToggle(event) {\n      this.spent = event.value;\n    }\n  }\n};",{"version":3,"sources":["EditEntry.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqFA,SAAA,eAAA,QAAA,aAAA;AACA,OAAA,SAAA,MAAA,aAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,MADA;AAEA,EAAA,KAAA,EAAA,CAAA,aAAA,CAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,KAAA,EAAA;AADA,KAAA;AAGA,GAPA;AAQA,EAAA,QAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,aAAA;AACA,QAAA,OAAA,EAAA,KAAA,WAAA,CAAA,OADA;AAEA,QAAA,MAAA,EAAA,KAAA,WAAA,CAAA,MAAA,GAAA,CAFA;AAGA,QAAA,gBAAA,EAAA,KAAA,WAAA,CAAA,gBAHA;AAIA,QAAA,QAAA,EAAA,KAAA,WAAA,CAAA,QAJA;AAKA,QAAA,OAAA,EAAA,KAAA,WAAA,CAAA,OALA;AAMA,QAAA,KAAA,EAAA,KAAA,WAAA,CAAA,KANA;AAOA,QAAA,MAAA,EAAA,IAAA,CAAA,GAAA,CAAA,KAAA,WAAA,CAAA,MAAA,CAPA;AAQA,QAAA,IAAA,EAAA,KAAA,WAAA,CAAA,IARA;AASA,QAAA,cAAA,EAAA,KAAA,WAAA,CAAA;AATA,OAAA;AAWA,KAbA;AAcA,IAAA,UAdA,wBAcA;AACA,UAAA,KAAA,SAAA,CAAA,MAAA,EAAA,OAAA,OAAA;AACA,aAAA,OAAA;AACA;AAjBA,GARA;AA2BA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,oBACA;AAAA;;AACA,UAAA,IAAA,GAAA,KAAA,SAAA;;AACA,UAAA,IAAA,CAAA,MAAA,KAAA,EAAA,IAAA,IAAA,CAAA,OAAA,KAAA,EAAA,IAAA,IAAA,CAAA,gBAAA,CAAA,QAAA,GAAA,KAAA,CAAA,GAAA,EAAA,MAAA,KAAA,CAAA,EAAA;AACA,YAAA,MAAA,GAAA,CAAA;AACA,YAAA,CAAA,IAAA,CAAA,MAAA,EAAA,MAAA,GAAA,CAAA,CAAA;AACA,YAAA,KAAA,GAAA;AACA,UAAA,OAAA,EAAA,IAAA,CAAA,OADA;AAEA,UAAA,gBAAA,EAAA,IAAA,CAAA,gBAFA;AAGA,UAAA,QAAA,EAAA,IAAA,CAAA,QAHA;AAIA,UAAA,OAAA,EAAA,IAAA,CAAA,OAJA;AAKA,UAAA,KAAA,EAAA,IAAA,CAAA,KALA;AAMA,UAAA,MAAA,EAAA,MAAA,CAAA,IAAA,CAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,CAAA,GAAA,MANA;AAOA,UAAA,IAAA,EAAA,IAAA,CAAA,IAPA;AAQA,UAAA,cAAA,EAAA,IAAA,CAAA;AARA,SAAA;AAUA,QAAA,KAAA,CAAA,wCAAA,KAAA,MAAA,CAAA,KAAA,CAAA,OAAA,CAAA,OAAA,GAAA,SAAA,EAAA,eAAA,CAAA,KAAA,CAAA,CAAA,CACA,IADA,CACA,UAAA,GAAA;AAAA,iBAAA,GAAA,CAAA,IAAA,EAAA;AAAA,SADA,EAEA,IAFA,CAEA,UAAA,QAAA,EAAA;AACA,UAAA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,uBAAA,EAAA,KAAA;;AACA,UAAA,KAAA,CAAA,sBAAA,CAAA;AACA,SALA,EAMA,KANA,CAMA,UAAA,KAAA;AAAA,iBAAA,KAAA,CAAA,+BAAA,CAAA;AAAA,SANA;AAOA,aAAA,KAAA;AACA,OArBA,MAqBA;AACA,QAAA,KAAA,CAAA,yDAAA,CAAA;AACA;AACA,KA3BA;AA4BA,IAAA,KA5BA,mBA4BA;AACA,WAAA,KAAA,GAAA,IAAA;AACA,MAAA,SAAA,CAAA,OAAA,CAAA,cAAA;AACA,KA/BA;AAgCA,IAAA,YAhCA,wBAgCA,KAhCA,EAgCA;AACA,WAAA,KAAA,GAAA,KAAA,CAAA,KAAA;AACA;AAlCA;AA3BA,CAAA","sourcesContent":["<template>\n    <div id=\"background\">\n        <div class=\"container\">\n            <div class=\"inner-container\">\n                <h1>Edit Transaction</h1>\n                <toggle-button @change=\"updateToggle\" :sync=\"true\" :value=\"editModel.toggle\" :labels=\"{checked: 'Earned', unchecked: 'Spent'}\" :color=\"{checked: '#3DD721', unchecked: '#FF5733'}\" :width=150 />\n                <div id=\"grid\">\n                    <i class=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n                    <input\n                            type=\"date\"\n                            class=\"form-control margin-bottom\"\n                            required=\"true\"\n                            autofocus=\"true\"\n                            name=\"date\"\n                            v-model=\"editModel.transaction_date\"\n                    >\n                    <i class=\"fa fa-object-group\" aria-hidden=\"true\"></i>\n                    <input\n                            type=\"text\"\n                            class=\"form-control margin-bottom\"\n                            placeholder=\"Category\"\n                            required=\"true\"\n                            autofocus=\"true\"\n                            name=\"category\"\n                            v-model=\"editModel.category\"\n                    >\n                    <i class=\"fa fa-user\" aria-hidden=\"true\"></i>\n                    <input\n                            type=\"text\"\n                            class=\"form-control margin-bottom\"\n                            :placeholder=\"payerPayee\"\n                            required=\"true\"\n                            autofocus=\"true\"\n                            name=\"payee\"\n                            v-model=\"editModel.payee\"\n                    >\n                    <i class=\"fa fa-usd\" aria-hidden=\"true\"></i>\n                    <input\n                            type=\"number\"\n                            step=\".01\"\n                            class=\"form-control margin-bottom\"\n                            placeholder=\"Amount\"\n                            required=\"true\"\n                            autofocus=\"true\"\n                            name=\"amount\"\n                            v-model=\"editModel.amount\"\n                    >\n                    <i class=\"fa fa-sticky-note\" aria-hidden=\"true\"></i>\n                    <input\n                            type=\"text\"\n                            class=\"form-control margin-bottom\"\n                            placeholder=\"Memo\"\n                            required=\"true\"\n                            autofocus=\"true\"\n                            name=\"memo\"\n                            v-model=\"editModel.memo\"\n\n                    >\n                    <i class=\"fa fa-users\" aria-hidden=\"true\"></i>\n                    <input\n                            type=\"text\"\n                            class=\"form-control margin-bottom\"\n                            placeholder=\"Account\"\n                            required=\"true\"\n                            autofocus=\"true\"\n                            name=\"account\"\n                            v-model=\"editModel.account\"\n                    >\n                </div>\n                <button\n                        id=\"loginButton\"\n                        class=\"btn btn-md btn-success float-center\"\n                        @click=\"submit()\"\n                >Edit Entry</button>\n                <button\n                        id=\"closeButton\"\n                        class=\"btn btn-md btn-danger float-center\"\n                        @click=\"close()\"\n                > X </button>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import { httpPostOptions } from \"../lib/http\"\n    import Dashboard from \"./Dashboard\";\n\n    export default {\n        name: \"edit\",\n        props: [\"transaction\"],\n        data() {\n          return {\n              spent: null\n          }\n        },\n        computed: {\n            editModel() {\n                return {\n                    user_id: this.transaction.user_id,\n                    toggle: this.transaction.amount > 0,\n                    transaction_date: this.transaction.transaction_date,\n                    category: this.transaction.category,\n                    account: this.transaction.account,\n                    payee: this.transaction.payee,\n                    amount: Math.abs(this.transaction.amount),\n                    memo: this.transaction.memo,\n                    transaction_id: this.transaction.transaction_id\n                }\n            },\n            payerPayee() {\n                if(this.editModel.toggle) return \"Payer\";\n                return \"Payee\";\n            }\n        },\n        methods: {\n            submit() {\n                let curr = this.editModel;\n                if (curr.amount !== \"\" && curr.account !== \"\" && curr.transaction_date.toString().split(\"-\").length === 3) {\n                    let factor = 1;\n                    if(!curr.toggle) factor = -1;\n                    let model = {\n                        user_id: curr.user_id,\n                        transaction_date: curr.transaction_date,\n                        category: curr.category,\n                        account: curr.account,\n                        payee: curr.payee,\n                        amount: Number(Math.abs(curr.amount)) * factor,\n                        memo: curr.memo,\n                        transaction_id: curr.transaction_id\n                    };\n                    fetch(\"http://127.0.0.1:8080/transactions/\" + this.$store.state.profile.user_id + \"/update\", httpPostOptions(model))\n                        .then(res => res.json())\n                        .then(response => {\n                            this.$store.dispatch(\"editTransactionAction\", model);\n                            alert(\"Transaction updated!\");\n                        })\n                        .catch(error => alert(\"Transaction failed to update.\"));\n                    this.close();\n                } else {\n                    alert(\"Make sure you fill in amount, account, AND proper date!\");\n                }\n            },\n            close() {\n                this.spent = null;\n                Dashboard.methods.closeEditEntry();\n            },\n            updateToggle(event) {\n                this.spent = event.value;\n            }\n        }\n    };\n</script>\n<style scoped>\n    #background {\n        background-color: #f7f7fc;\n    }\n    .container {\n        position: absolute;\n        z-index: 200;\n        width: 100%;\n        background-color: rgba(0,0,0,.5);\n        display: grid;\n        margin-left: 9em;\n        align-content: center;\n        align-items: center;\n        height: 100vh;\n    }\n    .inner-container {\n        margin: 15%;\n        background-color: white;\n        padding: 3em;\n        border-radius: 20px;\n        box-shadow: -5px 29px 162px -54px grey;\n    }\n    #grid {\n        display: grid;\n        grid-template-columns: 3em auto;\n        grid-template-rows: repeat(6, 3em);\n        grid-column-gap: 1em;\n    }\n    i {\n        font-size: 2em;\n        text-align: center;\n    }\n    h1 {\n        margin-bottom: 1em;\n    }\n    button {\n        margin: 1em auto;\n    }\n    @media only screen and (max-width: 1100px) {\n        #background{\n            height: 85vh;\n            border-radius: 1em;\n            margin: 0 5vw;\n            background-color: transparent;\n        }\n        .container {\n            height: 85vh;\n        }\n    }\n</style>\n"],"sourceRoot":"src/components"}]}