{"remainingRequest":"/Users/timothyqin/ONE/hackathon/node_modules/thread-loader/dist/cjs.js!/Users/timothyqin/ONE/hackathon/node_modules/babel-loader/lib/index.js!/Users/timothyqin/ONE/hackathon/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/timothyqin/ONE/hackathon/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/timothyqin/ONE/hackathon/src/components/AddEntry.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/timothyqin/ONE/hackathon/src/components/AddEntry.vue","mtime":1560450233046},{"path":"/Users/timothyqin/ONE/hackathon/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/timothyqin/ONE/hackathon/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/timothyqin/ONE/hackathon/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/timothyqin/ONE/hackathon/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/timothyqin/ONE/hackathon/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _JSON$stringify from \"/Users/timothyqin/ONE/hackathon/node_modules/@babel/runtime-corejs2/core-js/json/stringify\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { httpPostOptions } from '../lib/http';\nexport default {\n  name: \"entry\",\n  mounted: function mounted() {\n    if (this.$store.state.username === \"\") this.$router.push({\n      path: \"/\"\n    });\n  },\n  data: function data() {\n    return {\n      EntryModel: {\n        toggle: false,\n        // transactionValue: \"0\",\n        date: new Date().getDate(),\n        category: \"\",\n        payee: \"\",\n        amount: \"\",\n        memo: \"\",\n        account: \"\"\n      }\n    };\n  },\n  computed: {\n    payerPayee: function payerPayee() {\n      if (this.EntryModel.toggle) return \"Payer\";\n      return \"Payee\";\n    }\n  },\n  methods: {\n    submit: function submit() {\n      var _this = this;\n\n      var curr = this.EntryModel;\n\n      if (this.$store.state.username !== \"\" && curr.amount !== \"\" && curr.account !== \"\" && curr.date.toString().split(\"-\").length === 3) {\n        var factor = -1;\n        if (this.EntryModel.toggle) factor = 1;\n        var model = {\n          id: -1,\n          username: this.$store.state.username,\n          transaction_date: this.EntryModel.date,\n          category: this.EntryModel.category,\n          payee: this.EntryModel.payee,\n          amount: Number(Math.abs(this.EntryModel.amount)) * factor,\n          memo: this.EntryModel.memo,\n          account: this.EntryModel.account\n        };\n        fetch(\"transactions\", httpPostOptions(model)).then(function (res) {\n          return res.json();\n        }).then(function (response) {\n          model.id = Number(response);\n\n          _this.$store.dispatch(\"addTransactionAction\", model);\n\n          console.log('Success:', _JSON$stringify(response));\n        }).catch(function (error) {\n          return console.error('Error:', error);\n        });\n        this.EntryModel = {\n          date: new Date().getDate(),\n          category: \"\",\n          payee: \"\",\n          amount: \"\",\n          memo: \"\",\n          account: \"\"\n        };\n        alert(\"Transaction recorded!\");\n      } else {\n        alert(\"Make sure you fill in amount, account, AND proper date!\");\n      }\n    }\n  }\n};",{"version":3,"sources":["AddEntry.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"background\">\n    <div class=\"container\">\n      <div class=\"inner-container\">\n        <h1>Add Transaction</h1>\n        <toggle-button v-model=\"EntryModel.toggle\" :value=\"false\" :labels=\"{checked: 'Earned', unchecked: 'Spent'}\" :color=\"{checked: '#3DD721', unchecked: '#FF5733'}\" :width=150 />\n        <div id=\"grid\">\n          <i class=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n          <input\n            type=\"date\"\n            class=\"form-control margin-bottom\"\n            required=\"true\"\n            autofocus=\"true\"\n            name=\"date\"\n            v-model=\"EntryModel.date\"\n          >\n          <i class=\"fa fa-object-group\" aria-hidden=\"true\"></i>\n          <input\n            type=\"text\"\n            class=\"form-control margin-bottom\"\n            placeholder=\"Category\"\n            required=\"true\"\n            autofocus=\"true\"\n            name=\"category\"\n            v-model=\"EntryModel.category\"\n          >\n          <i class=\"fa fa-user\" aria-hidden=\"true\"></i>\n          <input\n            type=\"text\"\n            class=\"form-control margin-bottom\"\n            :placeholder=\"payerPayee\"\n            required=\"true\"\n            autofocus=\"true\"\n            name=\"payee\"\n            v-model=\"EntryModel.payee\"\n          >\n          <i class=\"fa fa-usd\" aria-hidden=\"true\"></i>\n          <input\n            type=\"number\"\n            step=\".01\"\n            class=\"form-control margin-bottom\"\n            placeholder=\"Amount\"\n            required=\"true\"\n            autofocus=\"true\"\n            name=\"amount\"\n            v-model=\"EntryModel.amount\"\n          >\n          <i class=\"fa fa-sticky-note\" aria-hidden=\"true\"></i>\n          <input\n            type=\"text\"\n            class=\"form-control margin-bottom\"\n            placeholder=\"Memo\"\n            required=\"true\"\n            autofocus=\"true\"\n            name=\"memo\"\n            v-model=\"EntryModel.memo\"\n          >\n          <i class=\"fa fa-users\" aria-hidden=\"true\"></i>\n          <input\n            type=\"text\"\n            class=\"form-control margin-bottom\"\n            placeholder=\"Account\"\n            required=\"true\"\n            autofocus=\"true\"\n            name=\"account\"\n            v-model=\"EntryModel.account\"\n          >\n        </div>\n        <button\n          id=\"loginButton\"\n          class=\"btn btn-md btn-success float-center\"\n          @click=\"submit()\"\n        >Add Entry</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { httpPostOptions } from '../lib/http';\n\nexport default {\n  name: \"entry\",\n  mounted() {\n    if(this.$store.state.username === \"\")\n      this.$router.push({ path: \"/\" });\n  },\n  data() {\n    return {\n      EntryModel: {\n        toggle: false,\n        // transactionValue: \"0\",\n        date: new Date().getDate(),\n        category: \"\",\n        payee: \"\",\n        amount: \"\",\n        memo: \"\",\n        account: \"\"\n      }\n    };\n  },\n  computed: {\n    payerPayee() {\n      if(this.EntryModel.toggle) return \"Payer\";\n      return \"Payee\";\n    }\n  },\n  methods: {\n    submit() {\n      var curr = this.EntryModel;\n      if (this.$store.state.username !== \"\" && curr.amount !== \"\" && curr.account !== \"\" && curr.date.toString().split(\"-\").length === 3) {\n        var factor = -1;\n        if(this.EntryModel.toggle) factor = 1;\n        const model = {\n          id: -1,\n          username: this.$store.state.username,\n          transaction_date: this.EntryModel.date,\n          category: this.EntryModel.category,\n          payee: this.EntryModel.payee,\n          amount: Number(Math.abs(this.EntryModel.amount)) * factor,\n          memo: this.EntryModel.memo,\n          account: this.EntryModel.account\n        };\n        fetch(\"transactions\", httpPostOptions(model))\n        .then(res => res.json())\n        .then(response => {\n          model.id = Number(response);\n          this.$store.dispatch(\"addTransactionAction\", model);\n          console.log('Success:', JSON.stringify(response))\n        })\n        .catch(error => console.error('Error:', error));\n        this.EntryModel = {\n          date: new Date().getDate(),\n          category: \"\",\n          payee: \"\",\n          amount: \"\",\n          memo: \"\",\n          account: \"\"\n        };\n        alert(\"Transaction recorded!\");\n      } else {\n        alert(\"Make sure you fill in amount, account, AND proper date!\");\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n#background {\n  background-color: #f7f7fc;\n}\n.container {\n  display: grid;\n  align-content: center;\n  align-items: center;\n  height: 100vh;\n}\n.inner-container {\n  margin: 15%;\n  background-color: white;\n  padding: 3em;\n  border-radius: 20px;\n  box-shadow: -5px 29px 162px -54px grey;\n}\n#grid {\n  display: grid;\n  grid-template-columns: 3em auto;\n  grid-template-rows: repeat(6, 3em);\n  grid-column-gap: 1em;\n}\ni {\n  font-size: 2em;\n  text-align: center;\n}\nh1 {\n  margin-bottom: 1em;\n}\nbutton {\n  margin: 1em auto;\n}\n@media only screen and (max-width: 1100px) {\n  #background{\n    height: 85vh;\n    border-radius: 1em;\n    margin: 0 5vw;\n    background-color: transparent;\n  }\n  .container {\n    height: 85vh;\n  }\n}\n</style>\n"],"sourceRoot":"src/components"}]}