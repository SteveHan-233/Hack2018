{"remainingRequest":"/Users/timothyqin/ONE/hackathon/node_modules/babel-loader/lib/index.js!/Users/timothyqin/ONE/hackathon/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/timothyqin/ONE/hackathon/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/timothyqin/ONE/hackathon/src/components/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/timothyqin/ONE/hackathon/src/components/Login.vue","mtime":1560361816990},{"path":"/Users/timothyqin/ONE/hackathon/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/timothyqin/ONE/hackathon/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/timothyqin/ONE/hackathon/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/timothyqin/ONE/hackathon/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { httpPostOptions } from \"../lib/http\";\nimport MD5 from \"crypto-js/md5\";\nexport default {\n  name: 'login',\n  data: function data() {\n    return {\n      LoginModel: {\n        username: '',\n        password: ''\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.resetCurrentUser(\"\");\n  },\n  computed: {\n    getCurrentUser: function getCurrentUser() {\n      return this.$store.state.username;\n    }\n  },\n  methods: {\n    login: function login() {\n      var _this = this;\n\n      var model = {\n        username: this.LoginModel.username,\n        email: \"\",\n        password: MD5(this.LoginModel.password).toString(),\n        phoneNumber: \"\"\n      };\n      fetch(\"users\", httpPostOptions(model)).then(function (res) {\n        return res.json();\n      }).then(function (response) {\n        if (!response) alert(\"Wrong username or password!\");else {\n          _this.resetCurrentUser(_this.LoginModel.username.trim());\n\n          _this.$router.push({\n            path: '/dashboard'\n          });\n        }\n      }).catch(function (error) {\n        return console.error('Error:', error);\n      });\n    },\n    signup: function signup() {\n      this.$router.push({\n        path: '/signup'\n      });\n    },\n    resetCurrentUser: function resetCurrentUser(username) {\n      this.$store.dispatch('setCurrentUserAction', username);\n      this.$store.dispatch('clearCurrentStoredTransactionsAction');\n    }\n  }\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAAA,eAAA,QAAA,aAAA;AACA,OAAA,GAAA,MAAA,eAAA;AAGA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,UAAA,EAAA;AACA,QAAA,QAAA,EAAA,EADA;AAEA,QAAA,QAAA,EAAA;AAFA;AADA,KAAA;AAMA,GATA;AAUA,EAAA,OAVA,qBAUA;AACA,SAAA,gBAAA,CAAA,EAAA;AACA,GAZA;AAaA,EAAA,QAAA,EAAA;AACA,IAAA,cADA,4BACA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,QAAA;AACA;AAHA,GAbA;AAkBA,EAAA,OAAA,EAAA;AACA,IAAA,KADA,mBACA;AAAA;;AACA,UAAA,KAAA,GAAA;AACA,QAAA,QAAA,EAAA,KAAA,UAAA,CAAA,QADA;AAEA,QAAA,KAAA,EAAA,EAFA;AAGA,QAAA,QAAA,EAAA,GAAA,CAAA,KAAA,UAAA,CAAA,QAAA,CAAA,CAAA,QAAA,EAHA;AAIA,QAAA,WAAA,EAAA;AAJA,OAAA;AAMA,MAAA,KAAA,CAAA,OAAA,EAAA,eAAA,CAAA,KAAA,CAAA,CAAA,CACA,IADA,CACA,UAAA,GAAA;AAAA,eAAA,GAAA,CAAA,IAAA,EAAA;AAAA,OADA,EAEA,IAFA,CAEA,UAAA,QAAA,EAAA;AACA,YAAA,CAAA,QAAA,EACA,KAAA,CAAA,6BAAA,CAAA,CADA,KAEA;AACA,UAAA,KAAA,CAAA,gBAAA,CAAA,KAAA,CAAA,UAAA,CAAA,QAAA,CAAA,IAAA,EAAA;;AACA,UAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AAAA,YAAA,IAAA,EAAA;AAAA,WAAA;AACA;AACA,OATA,EAUA,KAVA,CAUA,UAAA,KAAA;AAAA,eAAA,OAAA,CAAA,KAAA,CAAA,QAAA,EAAA,KAAA,CAAA;AAAA,OAVA;AAWA,KAnBA;AAoBA,IAAA,MApBA,oBAoBA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAAA;AACA,KAtBA;AAuBA,IAAA,gBAvBA,4BAuBA,QAvBA,EAuBA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,sBAAA,EAAA,QAAA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,sCAAA;AACA;AA1BA;AAlBA,CAAA","sourcesContent":["<template>\n    <div class=\"container-1\">\n        <main>\n            <div id=\"container-2\">\n            <h2>Login</h2>\n            <div id=\"grid\">\n                <i class=\"fa fa-user\" aria-hidden=\"true\"></i>\n                <input type=\"text\" class=\"form-control margin-bottom\" placeholder=\"Username\" v-model=LoginModel.username>\n                <i class=\"fa fa-lock\" aria-hidden=\"true\"></i>\n                <input type=\"password\" class=\"form-control margin-bottom\" placeholder=\"Password\" @keyup.enter=\"login()\" v-model=LoginModel.password>\n            </div>\n            <button id=\"loginButton\" class=\"btn btn-md btn-success float-center\" @click=\"login()\">\n                Submit\n            </button>\n            <button id=\"signupButton\" class=\"btn btn-md btn-primary float-center\" @click=\"signup()\">\n                SignUp\n            </button>\n            </div>\n        </main>\n    </div>\n</template>\n\n<script>\n    import { httpPostOptions } from \"../lib/http\";\n    import MD5 from \"crypto-js/md5\";\n\n\n    export default {\n        name: 'login',\n        data() {\n            return {\n                LoginModel: {\n                    username: '',\n                    password: ''\n                }\n            }\n        },\n        mounted() {\n            this.resetCurrentUser(\"\")\n        },\n        computed: {\n            getCurrentUser() {\n                return this.$store.state.username;\n            }\n        },\n        methods: {\n            login() {\n                var model = {\n                    username: this.LoginModel.username,\n                    email: \"\",\n                    password: MD5(this.LoginModel.password).toString(),\n                    phoneNumber: \"\"\n                };\n                fetch(\"users\", httpPostOptions(model))\n                    .then(res => res.json())\n                    .then(response => {\n                        if(!response)\n                            alert(\"Wrong username or password!\");\n                        else {\n                            this.resetCurrentUser(this.LoginModel.username.trim());\n                            this.$router.push({path: '/dashboard'})\n                        }\n                    })\n                    .catch(error => console.error('Error:', error));\n            },\n            signup() {\n                this.$router.push({path: '/signup'});\n            },\n            resetCurrentUser(username) {\n                this.$store.dispatch('setCurrentUserAction', username);\n                this.$store.dispatch('clearCurrentStoredTransactionsAction');\n            }\n        }\n    };\n</script>\n\n<style scoped>\n    main {\n        background-color: #F7F7FC;\n        display: grid;\n        height: 100vh;\n        align-content: center;\n        align-items: center;\n        padding: 0 15%;\n    }\n    h2 {\n        font-size: 2em;\n        margin-top: 0;\n        margin-bottom: 1em;\n    }\n    #grid {\n        display: grid;\n        grid-template-columns: 3em auto;\n        grid-template-rows: repeat(2, 3em);\n        grid-column-gap: 1em;\n    }\n    i {\n        font-size: 2em;\n        text-align: center;\n    }\n    #signupButton {\n        margin-left: 1%;\n    }\n    .container-1 {\n        display: grid; \n        align-items: center;\n        align-content: center;\n    }\n    #container-2 {\n        background-color: white;\n        padding: 4em;\n        border-radius: 2em;\n          box-shadow: -5px 29px 162px -54px grey;\n\n    }\n    @media only screen and (max-width: 1100px) {\n  main{\n    height: 85vh;\n    border-radius: 1em;\n    margin: 0 5vw;\n    background-color: transparent;\n  }\n}\n</style>"],"sourceRoot":"src/components"}]}