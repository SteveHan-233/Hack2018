{"remainingRequest":"/Users/timothyqin/ONE/hackathon/node_modules/babel-loader/lib/index.js!/Users/timothyqin/ONE/hackathon/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/timothyqin/ONE/hackathon/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/timothyqin/ONE/hackathon/src/components/EditEntry.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/timothyqin/ONE/hackathon/src/components/EditEntry.vue","mtime":1559948860881},{"path":"/Users/timothyqin/ONE/hackathon/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/timothyqin/ONE/hackathon/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/timothyqin/ONE/hackathon/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/timothyqin/ONE/hackathon/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _JSON$stringify from \"/Users/timothyqin/ONE/hackathon/node_modules/@babel/runtime-corejs2/core-js/json/stringify\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { httpPutOptions } from \"../lib/http\";\nimport Dashboard from \"./Dashboard\";\nexport default {\n  name: \"edit\",\n  props: [\"transaction\"],\n  mounted: function mounted() {\n    console.log(\"transaction: \" + this.transaction);\n  },\n  data: function data() {\n    return {\n      EditModel: {\n        username: this.transaction.username,\n        transaction_date: new Date(Number(this.transaction.transaction_date)).toISOString().split('T')[0],\n        category: this.transaction.category,\n        payee: this.transaction.payee,\n        amount: this.transaction.amount,\n        memo: this.transaction.memo,\n        account: this.transaction.account\n      }\n    };\n  },\n  methods: {\n    submit: function submit() {\n      var curr = this.EditModel;\n\n      if (curr.amount !== \"\" && curr.account !== \"\" && curr.transaction_date.toString().split(\"-\").length === 3) {\n        var transaction = this.transaction;\n        var model = {\n          username: this.transaction.username,\n          transaction_date_before: transaction.transaction_date,\n          category_before: transaction.category,\n          payee_before: transaction.payee,\n          amount_before: transaction.amount,\n          memo_before: transaction.memo,\n          account_before: transaction.account,\n          transaction_date_after: new Date(curr.transaction_date).getTime().toString(),\n          category_after: curr.category,\n          payee_after: curr.payee,\n          amount_after: curr.amount,\n          memo_after: curr.memo,\n          account_after: curr.account\n        };\n        console.log(model);\n        fetch(\"http://127.0.0.1:8080/transactions\", httpPutOptions(model)).then(function (res) {\n          return res.json();\n        }).then(function (response) {\n          // this.$store.dispatch(\"addTransactionAction\", model);\n          console.log('Success:', _JSON$stringify(response));\n        }).catch(function (error) {\n          return console.error('Error:', error);\n        });\n        alert(\"Transaction updated!\");\n      } else {\n        alert(\"Make sure you fill in amount, account, AND proper date!\");\n      }\n    },\n    close: function close() {\n      alert(\"oi\");\n      console.log(\"props transaction: \" + this.transaction);\n      Dashboard.methods.closeEditEntry();\n    }\n  }\n};",{"version":3,"sources":["EditEntry.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div id=\"background\">\n        <div class=\"container\">\n            <div class=\"inner-container\">\n                <h1>Edit Transaction</h1>\n                <div id=\"grid\">\n                    <i class=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n                    <input\n                            type=\"date\"\n                            class=\"form-control margin-bottom\"\n                            required=\"true\"\n                            autofocus=\"true\"\n                            name=\"date\"\n                            v-model=\"EditModel.transaction_date\"\n                    >\n                    <i class=\"fa fa-object-group\" aria-hidden=\"true\"></i>\n                    <input\n                            type=\"text\"\n                            class=\"form-control margin-bottom\"\n                            placeholder=\"Category\"\n                            required=\"true\"\n                            autofocus=\"true\"\n                            name=\"category\"\n                            v-model=\"EditModel.category\"\n                    >\n                    <i class=\"fa fa-user\" aria-hidden=\"true\"></i>\n                    <input\n                            type=\"text\"\n                            class=\"form-control margin-bottom\"\n                            placeholder=\"Payee\"\n                            required=\"true\"\n                            autofocus=\"true\"\n                            name=\"payee\"\n                            v-model=\"EditModel.payee\"\n                    >\n                    <i class=\"fa fa-usd\" aria-hidden=\"true\"></i>\n                    <input\n                            type=\"number\"\n                            step=\".01\"\n                            class=\"form-control margin-bottom\"\n                            placeholder=\"Amount\"\n                            required=\"true\"\n                            autofocus=\"true\"\n                            name=\"amount\"\n                            v-model=\"EditModel.amount\"\n                    >\n                    <i class=\"fa fa-sticky-note\" aria-hidden=\"true\"></i>\n                    <input\n                            type=\"text\"\n                            class=\"form-control margin-bottom\"\n                            placeholder=\"Memo\"\n                            required=\"true\"\n                            autofocus=\"true\"\n                            name=\"memo\"\n                            v-model=\"EditModel.memo\"\n                    >\n                    <i class=\"fa fa-users\" aria-hidden=\"true\"></i>\n                    <input\n                            type=\"text\"\n                            class=\"form-control margin-bottom\"\n                            placeholder=\"Account\"\n                            required=\"true\"\n                            autofocus=\"true\"\n                            name=\"account\"\n                            v-model=\"EditModel.account\"\n                    >\n                </div>\n                <button\n                        id=\"loginButton\"\n                        class=\"btn btn-md btn-success float-center\"\n                        @click=\"submit()\"\n                >Edit Entry</button>\n                <button\n                        id=\"closeButton\"\n                        class=\"btn btn-md btn-danger float-center\"\n                        @click=\"close()\"\n                > X </button>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import { httpPutOptions } from \"../lib/http\"\n    import Dashboard from \"./Dashboard\";\n\n    export default {\n        name: \"edit\",\n        props: [\"transaction\"],\n        mounted() {\n            console.log(\"transaction: \" + this.transaction)\n        },\n        data() {\n            return {\n                EditModel: {\n                        username: this.transaction.username,\n                        transaction_date: new Date(Number(this.transaction.transaction_date)).toISOString().split('T')[0],\n                        category: this.transaction.category,\n                        payee: this.transaction.payee,\n                        amount: this.transaction.amount,\n                        memo: this.transaction.memo,\n                        account: this.transaction.account\n                }\n            };\n        },\n        methods: {\n            submit() {\n                var curr = this.EditModel;\n                if (curr.amount !== \"\" && curr.account !== \"\" && curr.transaction_date.toString().split(\"-\").length === 3) {\n                    var transaction = this.transaction\n                    var model = {\n                        username: this.transaction.username,\n                        transaction_date_before: transaction.transaction_date,\n                        category_before: transaction.category,\n                        payee_before: transaction.payee,\n                        amount_before: transaction.amount,\n                        memo_before: transaction.memo,\n                        account_before: transaction.account,\n                        transaction_date_after: new Date(curr.transaction_date).getTime().toString(),\n                        category_after: curr.category,\n                        payee_after: curr.payee,\n                        amount_after: curr.amount,\n                        memo_after: curr.memo,\n                        account_after: curr.account,\n                    };\n                    console.log(model)\n                    fetch(\"http://127.0.0.1:8080/transactions\", httpPutOptions(model))\n                        .then(res => res.json())\n                        .then(response => {\n                            // this.$store.dispatch(\"addTransactionAction\", model);\n                            console.log('Success:', JSON.stringify(response))\n                        })\n                        .catch(error => console.error('Error:', error));\n                    alert(\"Transaction updated!\");\n                } else {\n                    alert(\"Make sure you fill in amount, account, AND proper date!\");\n                }\n            },\n            close() {\n                alert(\"oi\")\n                console.log(\"props transaction: \" + this.transaction)\n                Dashboard.methods.closeEditEntry();\n            }\n        }\n    };\n</script>\n<style scoped>\n    #background {\n        background-color: #f7f7fc;\n    }\n    .container {\n        position: absolute;\n        z-index: 200;\n        width: 100%;\n        background-color: rgba(0,0,0,.5);\n        display: grid;\n        margin-left: 9em;\n        align-content: center;\n        align-items: center;\n        height: 100vh;\n    }\n    .inner-container {\n        margin: 15%;\n        background-color: white;\n        padding: 3em;\n        border-radius: 20px;\n        box-shadow: -5px 29px 162px -54px grey;\n    }\n    #grid {\n        display: grid;\n        grid-template-columns: 3em auto;\n        grid-template-rows: repeat(6, 3em);\n        grid-column-gap: 1em;\n    }\n    i {\n        font-size: 2em;\n        text-align: center;\n    }\n    h1 {\n        margin-bottom: 1em;\n    }\n    button {\n        margin: 1em auto;\n    }\n    @media only screen and (max-width: 1100px) {\n        #background{\n            height: 85vh;\n            border-radius: 1em;\n            margin: 0 5vw;\n            background-color: transparent;\n        }\n        .container {\n            height: 85vh;\n        }\n    }\n</style>"],"sourceRoot":"src/components"}]}