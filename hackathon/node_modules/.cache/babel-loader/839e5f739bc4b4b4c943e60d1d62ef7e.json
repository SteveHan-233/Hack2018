{"remainingRequest":"/Users/timothyqin/ONE/hackathon/node_modules/babel-loader/lib/index.js!/Users/timothyqin/ONE/hackathon/node_modules/eslint-loader/index.js??ref--13-0!/Users/timothyqin/ONE/hackathon/src/store/store.js","dependencies":[{"path":"/Users/timothyqin/ONE/hackathon/src/store/store.js","mtime":1560059340951},{"path":"/Users/timothyqin/ONE/hackathon/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/timothyqin/ONE/hackathon/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/timothyqin/ONE/hackathon/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.sort\";\nimport Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport { isEquivalent } from \"../lib/lib\";\nVue.use(Vuex);\nvar state = {\n  username: '',\n  transactions: []\n};\nvar getters = {\n  getCurrentUser: function getCurrentUser(state) {\n    return state.username;\n  }\n};\nvar mutations = {\n  setCurrentUserMutations: function setCurrentUserMutations(state, nextUsername) {\n    state.username = nextUsername;\n  },\n  clearCurrentStoredTransactionsMutation: function clearCurrentStoredTransactionsMutation(state) {\n    state.transactions = [];\n  },\n  addTransactionMutation: function addTransactionMutation(state, transaction) {\n    state.transactions.push(transaction);\n  },\n  editTransactionMutation: function editTransactionMutation(state, transaction) {\n    for (var i = 0; i < state.transactions.length; i++) {\n      var current = state.transactions[i];\n\n      if (current.transaction_date === transaction.transaction_date_before && current.category === transaction.category_before && current.payee === transaction.payee_before && current.amount === transaction.amount_before && current.memo === transaction.memo_before && current.account === transaction.account_before) {\n        state.transactions[i].transaction_date = transaction.transaction_date_after;\n        state.transactions[i].category = transaction.category_after;\n        state.transactions[i].payee = transaction.payee_after;\n        state.transactions[i].amount = transaction.amount_after;\n        state.transactions[i].memo = transaction.memo_after;\n        state.transactions[i].account = transaction.account_after;\n      }\n    }\n\n    state.transactions.sort(function (a, b) {\n      return new Date(b.transaction_date).getTime() - new Date(a.transaction_date).getTime();\n    });\n  },\n  removeTransactionMutation: function removeTransactionMutation(state, transaction) {\n    var index = 0;\n\n    while (!isEquivalent(state.transactions[index], transaction)) {\n      index++;\n    }\n\n    state.transactions.splice(index, 1);\n  }\n};\nvar actions = {\n  setCurrentUserAction: function setCurrentUserAction(context, username) {\n    context.commit('setCurrentUserMutations', username);\n  },\n  clearCurrentStoredTransactionsAction: function clearCurrentStoredTransactionsAction(context) {\n    context.commit(\"clearCurrentStoredTransactionsMutation\");\n  },\n  addTransactionAction: function addTransactionAction(context, transaction) {\n    context.commit('addTransactionMutation', transaction);\n  },\n  editTransactionAction: function editTransactionAction(context, transaction) {\n    context.commit('editTransactionMutation', transaction);\n  },\n  removeTransactionAction: function removeTransactionAction(context, transaction) {\n    context.commit('removeTransactionMutation', transaction);\n  }\n};\nexport default new Vuex.Store({\n  strict: true,\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n});",{"version":3,"sources":["/Users/timothyqin/ONE/hackathon/src/store/store.js"],"names":["Vue","Vuex","isEquivalent","use","state","username","transactions","getters","getCurrentUser","mutations","setCurrentUserMutations","nextUsername","clearCurrentStoredTransactionsMutation","addTransactionMutation","transaction","push","editTransactionMutation","i","length","current","transaction_date","transaction_date_before","category","category_before","payee","payee_before","amount","amount_before","memo","memo_before","account","account_before","transaction_date_after","category_after","payee_after","amount_after","memo_after","account_after","sort","a","b","Date","getTime","removeTransactionMutation","index","splice","actions","setCurrentUserAction","context","commit","clearCurrentStoredTransactionsAction","addTransactionAction","editTransactionAction","removeTransactionAction","Store","strict"],"mappings":"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","sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport { isEquivalent } from \"../lib/lib\";\n\nVue.use(Vuex);\n\nconst state = {\n    username: '',\n    transactions: []\n}\n\nconst getters = {\n    getCurrentUser: function(state) {\n        return state.username;\n    }\n}\n\nconst mutations = {\n    setCurrentUserMutations: function(state, nextUsername) {\n        state.username = nextUsername;\n    },\n    clearCurrentStoredTransactionsMutation: function(state) {\n        state.transactions = []\n    },\n    addTransactionMutation: function(state, transaction) {\n        state.transactions.push(transaction);\n    },\n    editTransactionMutation: function(state, transaction) {\n        for(let i = 0; i < state.transactions.length; i++) {\n            let current = state.transactions[i];\n            if(current.transaction_date === transaction.transaction_date_before && current.category === transaction.category_before &&\n                current.payee === transaction.payee_before && current.amount === transaction.amount_before && current.memo === transaction.memo_before &&\n                current.account === transaction.account_before) {\n                state.transactions[i].transaction_date = transaction.transaction_date_after;\n                state.transactions[i].category = transaction.category_after;\n                state.transactions[i].payee = transaction.payee_after;\n                state.transactions[i].amount = transaction.amount_after;\n                state.transactions[i].memo = transaction.memo_after;\n                state.transactions[i].account = transaction.account_after;\n            }\n        }\n        state.transactions.sort((a, b) => new Date(b.transaction_date).getTime() - new Date(a.transaction_date).getTime());\n    },\n    removeTransactionMutation: function(state, transaction) {\n        var index = 0;\n        while(!isEquivalent(state.transactions[index], transaction)) index++;\n        state.transactions.splice(index, 1);\n    }\n}\n\nconst actions = {\n    setCurrentUserAction: function(context, username) {\n        context.commit('setCurrentUserMutations', username);\n    },\n    clearCurrentStoredTransactionsAction: function(context) {\n        context.commit(\"clearCurrentStoredTransactionsMutation\");\n    },\n    addTransactionAction: function(context, transaction) {\n        context.commit('addTransactionMutation', transaction);\n    },\n    editTransactionAction: function(context, transaction) {\n        context.commit('editTransactionMutation', transaction);\n    },\n    removeTransactionAction: function(context, transaction) {\n        context.commit('removeTransactionMutation', transaction);\n    }\n}\n\nexport default new Vuex.Store({\n  strict: true,\n    state,\n    getters,\n    mutations,\n    actions\n});\n"]}]}